{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/ContactList/ContactList.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactList","contacts","onDeleteContact","map","id","name","number","className","styles","li","onClick","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleNameChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","formReset","this","htmlFor","type","onChange","pattern","title","required","Component","Filter","changFilter","App","filter","formSubmitHandler","some","el","alert","newContact","console","log","onChangFilter","contactId","prevState","contact","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,GAAK,wBAAwB,OAAS,8B,uJCwBzCC,EArBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAChBD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACT,+BACI,qBAAaC,UAAWC,IAAOC,GAA/B,UAAoCJ,EAApC,KAA4CC,IAAnCF,GACT,wBAAQM,QAAU,kBAAIR,EAAgBE,IAAtC,2B,QCiEGO,E,4MArEXC,MAAQ,CACJP,KAAM,GACNC,OAAQ,I,EAGbO,YAAcC,IAAQC,W,EACrBC,cAAgBF,IAAQC,W,EAExBE,iBAAmB,SAAAC,GAEnB,MAAwBA,EAAMC,cAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBhB,EAAQe,K,EAIxBE,aAAe,SAAAJ,GAChBA,EAAMK,iBACD,EAAKC,MAAMC,SAAS,EAAKb,OACzB,EAAKc,a,EAIVA,UAAY,WACR,EAAKL,SAAS,CACVhB,KAAM,GACNC,OAAQ,M,4CAMhB,WACI,OAEQ,uBAAMmB,SAAUE,KAAKL,aAArB,UACN,wBAAOM,QAAUD,KAAKd,YAAtB,iBACU,uBACIgB,KAAK,OACLxB,KAAK,OACLe,MAAOO,KAAKf,MAAMP,KAClByB,SAAUH,KAAKV,iBACfb,GAAIuB,KAAKd,iBAKjB,wBAAOe,QAAUD,KAAKX,cAAtB,mBACI,uBACIa,KAAK,MACTxB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACJb,MAAOO,KAAKf,MAAMN,OAClBwB,SAAUH,KAAKV,iBACfb,GAAIuB,KAAKX,mBAIjB,wBAAQa,KAAK,SAAb,iC,GA7DUK,aCaXC,EAbA,SAAC,GAAD,IAAEf,EAAF,EAAEA,MAAOgB,EAAT,EAASA,YAAT,OACX,0DACI,uBAAOP,KAAK,OAAOT,MAAOA,EAC1BU,SAAWM,QCiEJC,E,4MAhEbzB,MAAQ,CACNX,SAAU,CACR,CAAEG,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAE/CgC,OAAQ,I,EAGXC,kBAAoB,YAAuB,IAApBlC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3B,GAAI,EAAKM,MAAMX,SAASuC,MAAK,SAAAC,GAAE,OAAIA,EAAGpC,OAASA,KAC7CqC,MAAM,GAAD,OAAIrC,EAAJ,iCACA,CACL,IAAMsC,EAAa,CAAEvC,GAAIU,IAAQC,WAAYV,OAAMC,UACnDsC,QAAQC,IAAIF,GAEd,EAAKtB,UAAS,gBAAEpB,EAAF,EAAEA,SAAF,MAAiB,CAC7BA,SAAS,GAAD,mBAAMA,GAAN,CAAgB0C,U,EAK5BG,cAAgB,SAAC5B,GACf,EAAKG,SAAS,CAAEiB,OAAQpB,EAAMC,cAAcC,S,EAK9ClB,gBAAkB,SAAC6C,GACjB,EAAK1B,UAAS,SAAA2B,GAAS,MAAK,CAC1B/C,SAAU+C,EAAU/C,SAASqC,QAAO,SAAAW,GAAO,OAAIA,EAAQ7C,KAAO2C,U,EAIlEG,mBAAqB,WAEnB,MAA2B,EAAKtC,MAAzB0B,EAAP,EAAOA,OAAQrC,EAAf,EAAeA,SAETkD,EAAmBb,EAAOc,cAEhC,OAAOnD,EAASqC,QAAO,SAAAW,GAAO,OAAIA,EAAQ5C,KAAK+C,cAAcC,SAASF,O,4CAIxE,WAEE,IAAMG,EAAkB3B,KAAKuB,qBAE7B,OACF,gCACA,2CACA,cAAC,EAAD,CAAazB,SAAUE,KAAKY,oBAE5B,0CACA,cAAC,EAAD,CAAQnB,MAASO,KAAKf,MAAMQ,MAAOgB,YAAcT,KAAKmB,gBAChD,cAAC,EAAD,CAAa7C,SAAUqD,EAAiBpD,gBAAiByB,KAAKzB,yB,GAzDpDgC,aCAlBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fbea0d6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__2Bqod\",\"button\":\"ContactList_button__1zec3\"};","\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    contacts.map(({ id, name, number }) => (\r\n        <ul>\r\n            <li key={id} className={styles.li}>{name}: {number}</li>\r\n            <button onClick ={()=>onDeleteContact(id)}>Delete</button>\r\n        </ul>\r\n    ))\r\n);\r\n\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n   nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleNameChange = event => {\r\n    // console.log(event.currentTarget.value);\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name] : value });\r\n    };\r\n    \r\n\r\n     handleSubmit = event => {\r\n    event.preventDefault();\r\n         this.props.onSubmit(this.state);\r\n         this.formReset();\r\n         \r\n    }\r\n    \r\n    formReset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor={ this.nameInputId}>name\r\n                    <input\r\n                        type='text'\r\n                        name='name'\r\n                        value={this.state.name}\r\n                        onChange={this.handleNameChange}\r\n                        id={this.nameInputId}\r\n                    />\r\n                    </label>\r\n                    \r\n              \r\n                <label htmlFor={ this.numberInputId}>number\r\n                    <input\r\n                        type='tel'\r\n                    name='number'\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                        value={this.state.number}\r\n                        onChange={this.handleNameChange}\r\n                        id={this.numberInputId}\r\n                    />\r\n                </label>\r\n                \r\n                <button type='submit'>Add contacts</button>\r\n          \r\n        </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\n// import styles from './Filter.module.css';\r\n\r\nconst Filter = ({value, changFilter}) => (\r\n    <label>Find contacts by name\r\n        <input type=\"text\" value={value}\r\n        onChange ={changFilter}/>\r\n\r\n    </label>\r\n)\r\n\r\nFilter.propTypes = {\r\nvalue: PropTypes.string.isRequired,\r\nchangFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { Component } from \"react\";\nimport shortid from 'shortid';\nimport ContactList from './Components/ContactList/ContactList';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n     filter: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    if (this.state.contacts.some(el => el.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = { id: shortid.generate(), name, number };\n      console.log(newContact);\n\n    this.setState(({contacts}) => ({\n      contacts: [...contacts, newContact]\n    }))\n    }\n  };\n\n  onChangFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  \n\n  onDeleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  };\n\n  getVisibleContacts = () => {\n    // деструктуризуєм фільтер і контакти\n    const {filter, contacts} = this.state;\n    // const normalizedFilter = this.state.filter.toLowerCase();\n    const normalizedFilter = filter.toLowerCase();\n    // return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n\n  render() {\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (   \n  <div>\n  <h1>Phonebook</h1>\n  <ContactForm onSubmit={this.formSubmitHandler}/>\n\n  <h2>Contacts</h2>\n  <Filter value = {this.state.value} changFilter ={this.onChangFilter} />\n        <ContactList contacts={visibleContacts} onDeleteContact={this.onDeleteContact}/>\n</div>\n  )\n\n\n} \n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}